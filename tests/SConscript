#! /usr/bin/env python

Import( 'env' )

env = env.Copy()

env.PrependUnique( CPPPATH=["#/src", "#/external/dbus/include"] )
env.PrependUnique( LIBPATH=[env['build_base']+"src", env['build_base']+"external/dbus"] )
env.PrependUnique( LIBS=["ffado", "dbus-c++"] )

if not env.GetOption( "clean" ):
	env.MergeFlags( env["DBUS1_FLAGS"] )
	env.MergeFlags( env['LIBRAW1394_FLAGS'] )
	env.MergeFlags( env['LIBXML26_FLAGS'] )

env.Xml2Cpp_Proxy('controlclient-glue.h', 'control-interface.xml')
env.Xml2Cpp_Adaptor('controlserver-glue.h', 'control-interface.xml')

#
# deactivate as they don't seem ported to the new api: test-extplugcmd,
# test-mixer, test-volume
#
apps = {
	"test-ffado" : "test-ffado.cpp controlserver.cpp",
	"test-fw410" : "test-fw410.cpp",
	"test-avccmd" : "test-avccmd.cpp",
	"test-focusrite" : "test-focusrite.cpp",
	#"test-extplugcmd" : "test-extplugcmd.cpp",
	#"test-volume" : "test-volume.cpp",
	#"test-mixer" : "test-mixer.cpp",
	"test-cycletimer" : "test-cycletimer.cpp",
	"test-timestampedbuffer" : "test-timestampedbuffer.cpp",
	"test-ieee1394service" : "test-ieee1394service.cpp",
	"test-streamdump" : "test-streamdump.cpp",
	"test-sytmonitor" : "test-sytmonitor.cpp SytMonitor.cpp",
	"test-dbus" : "test-dbus.cpp controlclient.cpp",
	"test-dbus-server" : "test-dbus-server.cpp controlserver.cpp",
}

for app in apps.keys():
	env.Program( target=app, source = env.Split( apps[app] ) )

env.SConscript( dirs="streaming", exports="env" )

