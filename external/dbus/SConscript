#
# library
#

import os
import sys

Import( 'env' )
#dbus_env = env.Copy()
buildenv={}
if os.environ.has_key('PATH'):
	buildenv['PATH']=os.environ['PATH']
else:
	buildenv['PATH']=''

if os.environ.has_key('PKG_CONFIG_PATH'):
	buildenv['PKG_CONFIG_PATH']=os.environ['PKG_CONFIG_PATH']
else:
	buildenv['PKG_CONFIG_PATH']=''

dbus_env = Environment( ENV = buildenv )

CacheDir( 'cache/objects' )

dbus_env.MergeFlags( env['DBUS1_FLAGS'] )

# add the local version of libdbus++
dbus_env.AppendUnique( CPPPATH=["#/external/dbus/include"] )
dbus_env.AppendUnique( LIBPATH=[env['build_base']+"external/dbus"])
dbus_env.AppendUnique( LIBS=["dbus-c++"] )
dbus_env.AppendUnique( CCFLAGS=["-DDBUS_API_SUBJECT_TO_CHANGE"] )

sources = [
	'src/connection.cpp',
	'src/debug.cpp',
	'src/dispatcher.cpp',
	'src/error.cpp',
	'src/eventloop.cpp',
	'src/interface.cpp',
	'src/introspection.cpp',
	'src/property.cpp',
	'src/message.cpp',
	'src/object.cpp',
	'src/pendingcall.cpp',
	'src/server.cpp',
	'src/types.cpp'
]

if env['DEBUG']:
	dbus_env.AppendUnique( CCFLAGS=["-DDEBUG","-g"] )

dbus_env.PrependUnique( LIBS=["expat"] )
libdbuspp=dbus_env.StaticLibrary('dbus-c++', sources)

#
# tools
#

tools_env = dbus_env.Copy()

introspect_sources = [
	'tools/introspect.cpp',
]

xml2cpp_sources = [
	'tools/xml.cpp','tools/xml2cpp.cpp'
]

tools_env.AppendUnique( CCFLAGS=["-DDBUS_API_SUBJECT_TO_CHANGE"] )
tools_env.AppendUnique( CPPPATH=["#/external/dbus/include"] )
tools_env.PrependUnique( LIBPATH=env['build_base']+"external/dbus" )
tools_env.PrependUnique( LIBS="dbus-c++" )

dbusxx_introspect = tools_env.Program('dbusxx-introspect', introspect_sources)
dbusxx_xml2cpp = tools_env.Program('dbusxx-xml2cpp', xml2cpp_sources)

#
# xml translator
#

def dbusxx_xml2cpp_emitter(target, source, env):
	dbus_env.Depends(target, dbusxx_xml2cpp)
	return (target, source)

dbusxx_xml2cpp_builder = Builder(action = dbusxx_xml2cpp[0].abspath + ' $SOURCE --adaptor=$TARGET',
	emitter = dbusxx_xml2cpp_emitter,
	suffix = '.h', src_suffix = '.xml')

Export('dbusxx_xml2cpp_builder')
