/* config.h.in. */
#ifndef CONFIG_H
#define CONFIG_H

/* Name of package */
#define PACKAGE $PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT "<ffado-devel@lists.sf.net>"

/* Define to the full name of this package. */
#define PACKAGE_NAME "$PACKAGE"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING "$PACKAGE $VERSION-$REVISION"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "$PACKAGE"

/* Define to the version of this package. */
#define PACKAGE_VERSION "$VERSION-$REVISION"

/* Define to the version of the cace. */
#define CACHE_VERSION "$VERSION-$REVISION"

/* Define to the api version */
#define FFADO_API_VERSION $FFADO_API_VERSION

#define CACHEDIR "~/.ffado"

#define BINDIR "$BINDIR"
#define LIBDIR "$LIBDIR"
#define SHAREDIR "$SHAREDIR"

/* Define indicating availability of lrint() */
#define HAVE_LRINT $HAVE_LRINT

/* Define indicatin availability of lrintf() */
#define HAVE_LRINTF $HAVE_LRINTF

#define DEBUG_IMPLEMENT_BACKLOG     0

// make this zero to disable the most extreme
// debug logging in the critical sections
#define DEBUG_EXTREME_ENABLE        0

// watchdog
#define WATCHDOG_DEFAULT_CHECK_INTERVAL_USECS   (1000*1000*4)
#define WATCHDOG_DEFAULT_RUN_REALTIME           1
#define WATCHDOG_DEFAULT_PRIORITY               98

// 1394 service constants 
#define IEEE1394SERVICE_USE_CYCLETIMER_DLL  1
#define IEEE1394SERVICE_CYCLETIMER_DLL_UPDATE_INTERVAL_USEC 200000
#define IEEE1394SERVICE_MAX_FIREWIRE_PORTS  4

#define IEEE1394SERVICE_CYCLETIMER_HELPER_RUN_REALTIME    1
#define IEEE1394SERVICE_CYCLETIMER_HELPER_PRIO_INCREASE  -10

// The current version of libiec61883 doesn't seem to calculate
// the bandwidth correctly. Defining this to non-zero skips
// bandwidth allocation when doing CMP connections.
#define IEEE1394SERVICE_SKIP_IEC61883_BANDWIDTH_ALLOCATION 1

#define THREAD_MAX_RTPRIO                   98
#define THREAD_MIN_RTPRIO                   1

#define MINIMUM_INTERRUPTS_PER_PERIOD       4U

// These are the result of a lot of trial and error
// due to weirdness in the kernel layer
#define MAX_XMIT_PACKET_SIZE                (2048-16)
#define MAX_XMIT_NB_BUFFERS                 40

#define ISOHANDLER_FLUSH_BEFORE_ITERATE     0

#define ISOHANDLER_DEATH_DETECT_TIMEOUT_USECS    1000000LL

#define ISOHANDLERMANAGER_MAX_ISO_HANDLERS_PER_PORT         16
#define ISOHANDLERMANAGER_MAX_STREAMS_PER_ISOTHREAD         16

// Ideally the audio processing will be driven by this thread
#define ISOHANDLERMANAGER_ISO_PRIO_INCREASE            1

// allows to add some processing margin. This shifts the time
// at which the buffer is transfer()'ed, making things somewhat
// more robust. It should be noted though that shifting the transfer
// time to a later time instant also causes the xmit buffer fill to be
// lower on average.
#define STREAMPROCESSORMANAGER_SIGNAL_DELAY_TICKS           (3072*6)

// startup control
#define STREAMPROCESSORMANAGER_CYCLES_FOR_DRYRUN            40000
#define STREAMPROCESSORMANAGER_CYCLES_FOR_STARTUP           200
#define STREAMPROCESSORMANAGER_PRESTART_CYCLES_FOR_XMIT     20
#define STREAMPROCESSORMANAGER_PRESTART_CYCLES_FOR_RECV     0
#define STREAMPROCESSORMANAGER_SYNCSTART_TRIES              10
#define STREAMPROCESSORMANAGER_SYNC_WAIT_TIME_MSEC          200
#define STREAMPROCESSORMANAGER_ALIGN_AVERAGE_TIME_MSEC      200
#define STREAMPROCESSORMANAGER_NB_ALIGN_TRIES               40

#define STREAMPROCESSORMANAGER_DYNAMIC_SYNC_DELAY           0

// FIXME: note that it will probably be better to use a DLL bandwidth that is 
//        dependant on the sample rate
#define TIMESTAMPEDBUFFER_DLL_BANDWIDTH                     (0.01)

// -- AMDTP options -- //

// in ticks
// as per AMDTP2.1:
// 354.17us + 125us @ 24.576ticks/usec = 11776.08192 ticks
#define AMDTP_TRANSMIT_TRANSFER_DELAY   (11776U)

// the absolute minimum number of cycles we want to transmit
// a packet ahead of the presentation time. The nominal time
// the packet is transmitted ahead of the presentation time is
// given by AMDTP_TRANSMIT_TRANSFER_DELAY (in ticks), but in case we
// are too late for that, this constant defines how late we can
// be.
#define AMDTP_MIN_CYCLES_BEFORE_PRESENTATION                1

// the absolute maximum number of cycles we want to transmit
// a packet ahead of the ideal transmit time. The nominal time
// the packet is transmitted ahead of the presentation time is
// given by AMDTP_TRANSMIT_TRANSFER_DELAY (in ticks), but we can send
// packets early if we want to. (not completely according to spec)
// (for spec compliance you need to specify a value of 1 or 2)
#define AMDTP_MAX_CYCLES_TO_TRANSMIT_EARLY                  2

// ensure that the AMDTP SP clips all float values to [-1.0..1.0]
#define AMDTP_CLIP_FLOATS                                   1

// -- MOTU options -- //

// the transfer delay is substracted from the ideal presentation
// time to obtain a corrected presentation time. This values is
// then used to stamp the packet and determine the transmission
// time instant.
#define MOTU_TRANSMIT_TRANSFER_DELAY    (11776U)

// the absolute minimum number of cycles we want to transmit
// a packet ahead of the presentation time. The nominal time
// the packet is transmitted ahead of the presentation time is
// given by MOTU_TRANSMIT_TRANSFER_DELAY (in ticks), but in case we
// are too late for that, this constant defines how late we can
// be.
#define MOTU_MIN_CYCLES_BEFORE_PRESENTATION                1

// the absolute maximum number of cycles we want to transmit
// a packet ahead of the ideal transmit time. The nominal time
// the packet is transmitted ahead of the presentation time is
// given by MOTU_TRANSMIT_TRANSFER_DELAY (in ticks), but we can send
// packets early if we want to.
#define MOTU_MAX_CYCLES_TO_TRANSMIT_EARLY                  6

#endif // CONFIG_H
